def condensedDecrypter(A):
    bins=[0,1]
    B=[[X,Y,Z,U,E] for X in bins for Y in bins for Z in bins for U in bins for E in bins]
    return(B)
    numAlph={0:'A',1:'B',2:'C',3:'D',4:'E',5:'F',6:'G',7:'H',8:'I',9:'J',10:'K',11:'L',12:'M',13:'N',14:'O',15:'P',16:'Q',17:'R',18:'S',19:'T',20:'U',21:'V',22:'W',23:'X',24:'Y',25:'Z',26:' '}
    C=[A[0]+B[0],A[1]+B[1],A[2]+B[2],A[3]+B[3],A[4]+B[4]]
    GF2dict={2:0,1:1,0:0}
    D=[GF2dict[X] for X in C]
    integer=(D[0]*16+D[1]*8+D[2]*4+D[3]*2+D[4])
    if integer>26:
        return("Error!")
    else:
        return(numAlph[integer])
